version: 2.1

executors:
  moneta-runner-executor:
    machine: true
    resource_class: moneta-labs/moneta-runner

parameters:
  run_manually:
    type: boolean
    default: false
  ENVIRONMENT:
    type: string
    default: ""
  TAG_ID:
    type: string
    default: ""

jobs:
  Hold_for_approval:
    type: approval

  Building_App:
    machine: true
    resource_class: moneta-labs/moneta-runner
    parameters:
      ENVIRONMENT:
        type: string
      run_manually:
        type: boolean
    steps:
      - run:
          name: Check run_manually flag
          command: |
            if [ "<< parameters.run_manually >>" != "true" ]; then
              echo "Skipping Building_App as run_manually is false"
              circleci step halt
            fi
      - checkout
      - run:
          name: Authenticate with GCP
          command: |
            echo "$GCLOUD_SERVICE_KEY" > ./service-account.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=./service-account.json' >> $BASH_ENV
            gcloud auth activate-service-account --key-file=./service-account.json
            gcloud --quiet config set project "${Name_Prefix}<< parameters.ENVIRONMENT >>"
      - run:
          name: Set TAG_ID
          command: |
            export TAG_ID=${CIRCLE_SHA1:0:8}
            echo "export TAG_ID=${TAG_ID}" >> $BASH_ENV
            echo $TAG_ID > /tmp/TAG_ID.txt
      - run:
          name: Build and Push Docker Image
          command: |
            gcloud secrets versions access latest --project="${Name_Prefix}<< parameters.ENVIRONMENT >>" --secret="${Name_Prefix}<< parameters.ENVIRONMENT >>-python-service" >> .env
            docker build --platform=linux/amd64 -t "$GCP_REGION-docker.pkg.dev/${Name_Prefix}<< parameters.ENVIRONMENT >>/${Name_Prefix}-python-service/${Name_Prefix}-python-service:$TAG_ID" -f Dockerfile .
            gcloud auth configure-docker "$GCP_REGION-docker.pkg.dev" --quiet
            docker push "$GCP_REGION-docker.pkg.dev/${Name_Prefix}<< parameters.ENVIRONMENT >>/${Name_Prefix}-python-service/${Name_Prefix}-python-service:$TAG_ID"
      - persist_to_workspace:
          root: /tmp
          paths:
            - TAG_ID.txt

  Deploying_App:
    machine: true
    resource_class: moneta-labs/moneta-runner
    parameters:
      ENVIRONMENT:
        type: string
      run_manually:
        type: boolean
    steps:
      - run:
          name: Check run_manually flag
          command: |
            if [ "<< parameters.run_manually >>" != "true" ]; then
              echo "Skipping Deploying_App as run_manually is false"
              circleci step halt
            fi
      - attach_workspace:
          at: /tmp
      - checkout
      - run:
          name: Authenticate with GCP
          command: |
            echo "$GCLOUD_SERVICE_KEY" > ./service-account.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=./service-account.json' >> $BASH_ENV
            gcloud auth activate-service-account --key-file=./service-account.json
            gcloud --quiet config set project "${Name_Prefix}<< parameters.ENVIRONMENT >>"
      - run:
          name: Deploy the App
          command: |
            TAG_ID=$(cat /tmp/TAG_ID.txt)
            echo "Using TAG_ID: $TAG_ID"
            bash .circleci/deploy.sh $TAG_ID

workflows:
  Moneta-PYTHON-SERVICE:
    when: << pipeline.parameters.run_manually >>
    jobs:
      - Building_App:
          ENVIRONMENT: << pipeline.parameters.ENVIRONMENT >>
          run_manually: << pipeline.parameters.run_manually >>
          filters:
            branches:
              only: main

      - Hold_for_approval:
          requires:
            - Building_App
          filters:
            branches:
              only: main

      - Deploying_App:
          requires:
            - Hold_for_approval
          ENVIRONMENT: << pipeline.parameters.ENVIRONMENT >>
          run_manually: << pipeline.parameters.run_manually >>
          filters:
            branches:
              only: main

